heat_template_version: 2015-10-15

description: |
  #### Development - RCv3

  This stack is running the latest version of
  [WordPress](http://wordpress.org/about/),
  [nginx](https://www.nginx.com/),
  and [PHP FPM](http://php-fpm.org/), and
  [MySQL 5.6](http://www.mysql.com/about/).

  **This deployment is meant for development and testing scenarios only and is not
  intended for production use**.

parameter_groups:
- label: WordPress Settings
  parameters:
  - wordpress_url
  - wordpress_sitename
  - wordpress_user
  - wordpress_email
- label: RackConnect Settings
  parameters:
  - rc_network_name
- label: rax-dev-params
  parameters:
  - ansible_source

parameters:
  #WordPress Customization
  wordpress_url:
    type: string
    default: example.com
    label: Site Domain
    description: Domain to use with WordPress Site
    constraints:
    - allowed_pattern: "^[a-zA-Z0-9.-]{1,255}.[a-zA-Z]{2,15}$"
      description: Must be a valid domain name
  wordpress_sitename:
    type: string
    default: Example Site
    label: Site Title
    description: Title to use for WordPress Site
  wordpress_user:
    type: string
    default: admin
    label: WordPress Admin Username
    description: Username for WordPress login
    constraints:
    - allowed_pattern: "^[a-zA-Z0-9]*$"
      description: Only can contain A-Z and 0-9
  wordpress_email:
    type: string
    default: admin@example.com
    label: WordPress Admin E-mail
    description: E-mail Address for WordPress Admin User
  rc_network_name:
    type: string
    label: RackConnect Network
    description: Name or UUID of RackConnected network to attach this server to
    constraints:
    - custom_constraint: rackconnect.network
  #Advanced Options
  flavor:
    type: string
    default: 4 GB General Purpose v1
    label: Server Flavor
    description: Flavor of Cloud Server to use for WordPress
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
  server_image:
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM) (Orchestration)
    label: Server Image
    description: Image to be used for all servers in this stack
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM) (Orchestration)
      - CentOS 7 (PVHVM) (Orchestration)
    immutable: true
  ansible_source:
    type: string
    default: http://catalog.rs-heat.com/ansible-roles/ansible-roles.tar.gz
    label: Ansible Tarball
    description: The Ansible Roles will be pulled from the location provided
    immutable: true

resources:
  #Passwords
  root_pass:
    type: OS::Heat::RandomString
  wordpress_pass:
    type: OS::Heat::RandomString
  database_pass:
    type: OS::Heat::RandomString
  holland_pass:
    type: OS::Heat::RandomString
  #SSH Key
  ssh_key:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true
  #Software Configurations
  upload_role_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
      - name: results
      config:
        str_replace:
          template: |
            #!/bin/bash
            set -e
            mkdir -p /etc/ansible/roles
            wget ansible_source -O /tmp/ansible-roles.tar.gz 2>&1
            tar -xf /tmp/ansible-roles.tar.gz --strip-components=1 -C /etc/ansible/roles
          params:
            ansible_source: { get_param: ansible_source }

  wordpress_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      inputs:
      - default: "[]"
        name: firewall_nodes
        type: CommaDelimitedList
      - default: "[]"
        name: firewall_node_rules
        type: CommaDelimitedList
      config: |
        ---
        - name: Install and configure WordPress
          hosts: localhost
          connection: local
          roles:
          - common
          - nginx
          - php-fpm
          - mysql
          - holland
          - wordpress
          - phpmyadmin
          - firewall
  deploy_roles:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: upload_role_config
      server:
        get_resource: wordpress_server
  deploy_wordpress:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy_roles
    properties:
      signal_transport: TEMP_URL_SIGNAL
      input_values:
        nginx_vhost_str: { get_param: wordpress_url }
        nginx_vhost_template: "wordpress"
        nginx_vhost_phpmyadmin: "True"
        mysql_root_password: { get_attr: [root_pass, value] }
        mysql_default_user: "wordpress"
        mysql_default_user_password: { get_attr: [database_pass, value ] }
        mysql_default_database: "wordpress"
        mysql_dbs:
          - "wordpress"
          - "phpmyadmin"
        tz: "America/Chicago"
        holland_mysql_user: "holland"
        holland_mysql_password: {  get_attr: [holland_pass, value] }
        holland_mysql_host: "localhost"
        holland_create_user: "yes"
        wordpress_db_host: "localhost"
        wordpress_db_name: "wordpress"
        wordpress_db_user: "wordpress"
        wordpress_db_pass: { get_attr: [database_pass, value] }
        wordpress_domain: { get_param: wordpress_url }
        wordpress_sitename: { get_param: wordpress_sitename }
        wordpress_user: { get_param: wordpress_user }
        wordpress_user_pass: { get_attr: [wordpress_pass, value] }
        wordpress_user_email: { get_param: wordpress_email }
        phpmyadmin_host: "localhost"
        phpmyadmin_user: "root"
        phpmyadmin_pass: { get_attr: [root_pass, value] }
        firewall_global_rules: [ "0.0.0.0,0,22,tcp", "0.0.0.0,0,80,tcp", "0.0.0.0,0,443,tcp"]
        firewall_nodes: []
        firewall_node_rules: []
      config:
        get_resource: wordpress_config
      server:
        get_resource: wordpress_server
  #Master Server
  wordpress_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: "OS::stack_name" }
      image: { get_param: server_image }
      flavor: { get_param: flavor }
      key_name: { get_resource: ssh_key }
      software_config_transport: POLL_TEMP_URL
      config_drive: true
      user_data_format: SOFTWARE_CONFIG
      networks:
      - network: { get_param: rc_network_name }
      - network: 11111111-1111-1111-1111-111111111111
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        build_config: "backup_agent_only,monitoring_defaults"
  wordpress_server_public_ip:
    type: Rackspace::RackConnect::PublicIP
    depends_on:
    - wordpress_server
    properties:
      server_id: { get_resource: wordpress_server }
  #Monitoring Checks
  wordpress_server_http_check:
    type: Rackspace::CloudMonitoring::Check
    depends_on:
      - deploy_wordpress
      - wordpress_server_public_ip
    properties:
      entity: { get_resource: wordpress_server }
      type: remote.http
      label:
        str_replace:
          template: stack Master HTTP Check
          params:
            stack: { get_param: "OS::stack_name" }
      details:
        url:
          str_replace:
            template: "http://ipaddr"
            params:
              ipaddr: { get_attr: [wordpress_server, accessIPv4] }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
      period: 120
      timeout: 10
      monitoring_zones_poll:
      - Northern Virginia (IAD)
      - Chicago (ORD)
      - Dallas Fort Worth (DFW)
      - London (LON)
      target_hostname: { get_attr: [wordpress_server, accessIPv4] }
      target_receiver: IPv4
  #Cloud Backup
  wordpress_backup:
    type: Rackspace::Cloud::BackupConfig
    depends_on: wordpress_server
    properties:
      #host_ip_address: { get_attr: [wordpress_server, accessIPv4] }
      server: { get_resource: wordpress_server }
      BackupConfigurationName:
        str_replace:
          template: stack Weekly Backup
          params:
            stack: { get_param: "OS::stack_name" }
      Inclusions:
      - FilePath: "/var/spool/holland"
        FileItemType: "Folder"
      - FilePath: "/var/www"
        FileItemType: "Folder"
      NotifyFailure: true
      NotifyRecipients: { get_param: wordpress_email }
      TimeZoneId: Central Standard Time
      StartTimeAmPm: AM
      StartTimeHour: 1
      StartTimeMinute: 0
      HourInterval: null
      DayOfWeekId: 0
      Frequency: "Weekly"
      VersionRetention: 30

outputs:
  wordpress_login_user:
    description: WordPress Admin User
    value:
      get_param: wordpress_user
  wordpress_login_password:
    description: WordPress Admin Password
    value:
      get_attr: [wordpress_pass, value]
  wordpress_public_ip:
    description: Load Balancer IP
    value:
      get_attr: [wordpress_server, accessIPv4]
  wordpress_admin_url:
    description: WordPress Admin URL
    value:
      str_replace:
        template: "https://domain/wp-admin/"
        params:
          domain: { get_param: wordpress_url }
  wordpress_public_url:
    description: WordPress Public URL
    value:
      str_replace:
        template: "http://domain/"
        params:
          domain: { get_param: wordpress_url }
  phpmyadmin_url:
    description: PHPMyAdmin URL
    value:
      str_replace:
        template: "https://IP/phpmyadmin/"
        params:
          IP:
            get_attr: [wordpress_server, accessIPv4]
  mysql_user:
    description: Database User
    value: "wordpress"
  mysql_password:
    description: Database Password
    value:
      get_attr: [database_pass, value]
  ssh_private_key:
    description: SSH Private Key
    value:
      get_attr: [ssh_key, private_key]
